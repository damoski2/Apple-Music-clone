import React, { useContext, useEffect, useState, useRef } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { GlobalContext } from "../../context/GlobalContext";
import { Layout, Loader } from "../../components/import";
import { PrivateRoute } from "../../utils";
import GenreCard from "../../components/Card/GenreCard";
import genre from "../../sample/genre";
import { Genre } from "../../types";
import SearchIcon from "../../assets/images/SearchIcon.svg";

import SpotifyWebApi from "spotify-web-api-node";
const spotifyApi = new SpotifyWebApi({
  clientId: "0c064b242e744e0ca6d6dbbc5458c704",
});

const Index = () => {
  const { accessToken, dispatch, loading, setGlobalSearchInput, searchInput } =
    useContext(GlobalContext);
  const [value, setValue] = useState<string>("");

  //const shuffleArray = (arr: string[]) => arr.sort(() => Math.random() - 0.5);

  //const filterGenre = (allGenres: any[]) => allGenres.filter((single_genre: string)=> genre)

  /* useEffect(()=>{
    if(!accessToken) return;
    spotifyApi.setAccessToken(accessToken);

    spotifyApi.getAvailableGenreSeeds().then(data=>{
     let genre = shuffleArray(data.body.genres);
     //console.log('genre seed',genre)
    })
  },[accessToken]) */

  const handleChange = (e: any) => {
    console.log(e.target.value);
    setValue(e.target.value);
    setGlobalSearchInput(e.target.value, dispatch);
  };

  return (
    <PrivateRoute>
      <Layout>
        <Head>
          <title>Apple music - browse</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {loading.state === "load_genre" ? (
          <Loader />
        ) : (
          <div className="bg-[#323232] h-full">
            <div className="md:hidden pt-[20px] md:pt-[90px] pb-4 md:px-10 px-6 z-40 bg-[#323232] fixed w-full top-0 bg-opacity-40 shadow-lg backdrop-filter backdrop-blur-md ">
              <h1 className="text-[#ffffffeb] font-semibold text-[34px]">
                Search
              </h1>
              <div className="relative w-full flex flex-row items-center">
                <Image
                  src={SearchIcon}
                  alt=""
                  className="absolute left-3 z-10 text-center"
                />
                <input
                  className="w-full bg-opacity-6 0 bg-clip-padding backdrop-blur-lg bg-[#4D4D4D] h-[34px] text-[#fff] focus:outline-none rounded-[6px] py-[4px] pl-8"
                  onChange={handleChange}
                  value={searchInput}
                  placeholder="Artists, Songs, Lyrics and More"
                />
              </div>
            </div>
            <div className="md:px-10 px-6 relative pt-[20px] md:pt-[90px] top-24 md:top-0 h-full">
              <h1 className="text-[17px] font-semibold text-[#ffffffeb] mt-6">
                Browse by Genre
              </h1>
              <div className="grid 2xl:grid-cols-6 xl:grid-cols-4 lg:grid-cols-3 grid-cols-2 gap-x-4 gap-y-10 row-auto grid-flow-row ">
                {genre.map((data: Genre, index: number) => (
                  <GenreCard data={data} key={index} />
                ))}
              </div>
            </div>
          </div>
        )}
      </Layout>
    </PrivateRoute>
  );
};

export default Index;
